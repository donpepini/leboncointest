{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/messages/MessageShema.js","components/messages/MessageList.js","components/dashboard/Dashboard.js","components/messages/MessageDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/messageActions.js","components/messages/CreateMessage.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/messageReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","profile","className","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","notif","key","id","user","content","moment","date","toDate","fromNow","MessageSchema","message","title","authorFirstName","authorLastName","createdAt","calendar","MessageList","messages","msg","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","required","infos","informations","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","console","log","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createMessage","authorId","add","Date","CreateMessage","history","push","App","exact","path","component","MessageDetails","Boolean","window","location","hostname","initState","authReducer","action","messageReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e9e2ee6.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  const { signOut, profile } = props;\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New message</NavLink>\n      </li>\n      <li >\n        <Link to='/' onClick={signOut}>Log out</Link>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating orange darken-2\">\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = informations => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(informations.email, informations.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore()\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return ( \n        <ul className='right'>\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n     );\n}\n \nexport default SignedOutLinks;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n//components\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper blue darken-4\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo left\">\n          Leboncoin\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = ({ notifications }) => {\n  return (\n    <div>\n      <div className=\"section\">\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">Notifications</span>\n            <ul className=\"notifications\">\n              {notifications &&\n                notifications.map(notif => {\n                  return (\n                    <li key={notif.id}>\n                      <p className=\"orange-text darken-2\">{notif.user}</p>\n                      <p>{notif.content}</p>\n                      <div className=\"grey-text note-date\">\n                        {moment(notif.date.toDate()).fromNow()}\n                      </div>\n                      <br />\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst MessageSchema = ({message}) => {\n    return (\n        <div className='card message-schema'>\n            <div className='card-content grey-text text-darken-3'>\n                <span className='card-title'>{message.title}</span>\n                <p>Posted by { message.authorFirstName } {message.authorLastName}</p>\n                <p className='grey-text'>{moment(message.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default MessageSchema;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//components\nimport MessageSchema from \"./MessageShema\";\n\nconst MessageList = ({ messages }) => {\n  return (\n    <div className=\"message-list section\">\n      {messages &&\n        messages.map(msg => {\n          return (\n            <Link to={`message/${msg.id}`} key={msg.id}>\n              <MessageSchema message={msg} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default MessageList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\n//components\nimport Notifications from \"./Notifications\";\nimport MessageList from \"../messages/MessageList\";\n\nclass Dashboard extends Component {\n  render() {\n    const { messages, auth, notifications } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <MessageList messages={messages} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"messages\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"date\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport moment from 'moment';\n\nconst MessageDetails = (props) => {\n    const { message } = props;\n    if(message){\n        return (\n            <div className='container section message-details'>\n                <div className='card'>\n                    <div className='card-content'>\n                        <span className='card-title'>{message.title}</span>\n                        <p>{message.content}</p>\n                    </div>\n                    <div className='card-action grey lighten-5 grey-text right-align'>\n                        <div>Posted by {message.authorFirstName} {message.authorLastName}</div>\n                        <div>{moment(message.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }else {\n        return(\n            <div className='container center'>\n                <p>Loading message</p>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const messages = state.firestore.data.messages;\n    const message = messages ? messages[id] : null;\n    return {\n        message\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'messages'}\n    ])\n)(MessageDetails);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect} from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  };\n  render() {\n    const { authError, auth} = this.props;\n    if(auth.uid){\n      return <Redirect to='/'/>\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} required/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} required/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn orange darken-2 z-depth-0\">Login</button>\n            {authError ? <div className='center'>Login failed</div> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: (infos) => dispatch(signIn(infos))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn orange darken-2 z-depth-0\">Sign Up</button>\n            {authError ? <div className=\"center red-text\">{authError}</div> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","export const createMessage = (message) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        //async call to db\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('messages').add({\n            ...message,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_MESSAGE', message})\n        }).catch( err => {\n            dispatch({type: 'CREATE_MESSAGE_ERROR', err})\n        })\n        \n    }\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createMessage } from \"../../store/actions/messageActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateMessage extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createMessage(this.state);\n    this.props.history.push('/');\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Write your message</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              className=\"materialize-textarea\"\n              id=\"content\"\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn orange darken-2 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createMessage: message => dispatch(createMessage(message))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateMessage);\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n//components\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport MessageDetails from './components/messages/MessageDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateMessage from './components/messages/CreateMessage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/message/:id' component={MessageDetails}/>\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/signup' component={SignUp}/>\n          <Route path='/create' component={CreateMessage}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: action.err\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n    messages: [\n        {id: 1, title: 'Yoshi', content:'YoYoYo is yoshi'},\n        {id: 2, title: 'Peach', content:'PePePe is peach'},\n        {id: 3, title: 'Mario', content:'MaMaMa is mario'},\n        {id: 4, title: 'Luigi', content:'LuLuLu is luigi'},\n    ]\n};\n\nconst messageReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_MESSAGE':\n            console.log('message created', action.message)\n            return state;\n        case 'CREATE_MESSAGE_ERROR':\n            console.log('messafe error', action.err)\n            return state;\n        default: \n            return state\n    }\n}\n\nexport default messageReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer'\nimport messageReducer from './messageReducer'\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    message: messageReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDC9hfflNObmZP7GNIzYQx-vLoCPHFGyoM\",\n    authDomain: \"hh-leboncoin.firebaseapp.com\",\n    databaseURL: \"https://hh-leboncoin.firebaseio.com\",\n    projectId: \"hh-leboncoin\",\n    storageBucket: \"\",\n    messagingSenderId: \"1040614173224\",\n    appId: \"1:1040614173224:web:4c44e14e72cee90757e31d\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport rootReducer from './store/reducers/rootReducer';\nimport fbConfig from './config/fbConfig';\n\n//create the redux store\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n        reduxFirestore(fbConfig)\n    )\n)\n\n//wait for firebase authentication data\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}